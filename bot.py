import csv
import re
import os
import telegram
import logging

from dotenv import load_dotenv
from datetime import datetime
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, InputFile, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes, ConversationHandler, CallbackQueryHandler
from telegram.error import Conflict


# <editor-fold desc="üìå CONSTANTS & CONFIG"> test

# Your Telegram ID for admin notifications
ADMIN_IDS = [3572078, 254506150]  # admin Telegram IDs

load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")

def is_admin(user_id):
    return user_id in ADMIN_IDS

# Main logger setup
logging.basicConfig(
    format="%(asctime)s - %(levelname)s - %(message)s",
    level=logging.INFO
)
logger = logging.getLogger(__name__)

logging.getLogger("telegram.bot").setLevel(logging.WARNING)
logging.getLogger("telegram.ext").setLevel(logging.WARNING)
logging.getLogger("httpx").setLevel(logging.WARNING)

# Survey data
survey = [
    {
        "question": "–ß—Ç–æ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å, –∫–æ–≥–¥–∞ —Ç–µ–±—è —Ö–≤–∞–ª—è—Ç –∑–∞ —Ç–≤–æ—é —Ä–∞–±–æ—Ç—É?",
        "answers": [
            {"text": "–ß—É–≤—Å—Ç–≤—É—é, —á—Ç–æ –ø–æ—Ö–≤–∞–ª–∞ –∑–∞—Å–ª—É–∂–µ–Ω–Ω–∞—è", "score": 2},
            {"text": "–ü—Ä–∏—è—Ç–Ω–æ, –Ω–æ –Ω–µ —Ñ–æ–∫—É—Å–∏—Ä—É—é—Å—å –Ω–∞ —ç—Ç–æ–º", "score": 4},
            {"text": "–ù–µ–º–Ω–æ–≥–æ –Ω–µ–ª–æ–≤–∫–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ –º–æ–≥–ª–∞ –±—ã —Å–¥–µ–ª–∞—Ç—å –ª—É—á—à–µ", "score": 6},
            {"text": "–û—â—É—â–∞—é, —á—Ç–æ –º–µ–Ω—è –ø–µ—Ä–µ–æ—Ü–µ–Ω–∏–≤–∞—é—Ç", "score": 8}
        ]
    },
    {
        "question": "–ö–∞–∫ —Ç—ã –æ—Ç–Ω–æ—Å–∏—à—å—Å—è –∫ —Å–≤–æ–∏–º —É—Å–ø–µ—Ö–∞–º?",
        "answers": [
            {"text": "–ß—É–≤—Å—Ç–≤—É—é, —á—Ç–æ –º–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è ‚Äì —Ä–µ–∑—É–ª—å—Ç–∞—Ç –º–æ–∏—Ö —É—Å–∏–ª–∏–π –∏ –Ω–∞–≤—ã–∫–æ–≤", "score": 2},
            {"text": "–ò–Ω–æ–≥–¥–∞ –¥—É–º–∞—é, —á—Ç–æ —É—Å–ø–µ—Ö —Å–≤—è–∑–∞–Ω —Å —É–¥–∞—á–µ–π", "score": 4},
            {"text": "–°—Ç–∞—Ä–∞—é—Å—å –Ω–µ –ø—Ä–∏–¥–∞–≤–∞—Ç—å –∏–º –±–æ–ª—å—à–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è", "score": 6},
            {"text": "–û—â—É—â–∞—é, —á—Ç–æ —è –ø—Ä–æ—Å—Ç–æ —Ö–æ—Ä–æ—à–æ –º–∞—Å–∫–∏—Ä—É—é—Å—å, –∏ —Å–∫–æ—Ä–æ —ç—Ç–æ –≤—Å–∫—Ä–æ–µ—Ç—Å—è", "score": 8}
        ]
    },
    {
        "question": "–ö–∞–∫ —Ç—ã —Ä–µ–∞–≥–∏—Ä—É–µ—à—å, –∫–æ–≥–¥–∞ –∫—Ç–æ-—Ç–æ –ø—Ä–æ—Å–∏—Ç —Ç–µ–±—è –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º –æ–ø—ã—Ç–æ–º?",
        "answers": [
            {"text": "–û—Ö–æ—Ç–Ω–æ –¥–µ–ª—é—Å—å, –≤–µ–¥—å –∑–Ω–∞—é, —á—Ç–æ —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ–ª–µ–∑–Ω—ã–π –æ–ø—ã—Ç", "score": 2},
            {"text": "–ò–Ω–æ–≥–¥–∞ –¥–µ–ª—é—Å—å, –Ω–æ —á—É–≤—Å—Ç–≤—É—é, —á—Ç–æ –µ—Å—Ç—å –ª—é–¥–∏, –∑–Ω–∞—é—â–∏–µ –±–æ–ª—å—à–µ", "score": 4},
            {"text": "–î—É–º–∞—é, —á—Ç–æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–∞ –∏ –º–Ω–µ –µ—â—ë —Ä–∞–Ω–æ", "score": 6},
            {"text": "–û—Ç–∫–∞–∑—ã–≤–∞—é—Å—å, –ø–æ—Ç–æ–º—É —á—Ç–æ –Ω–µ —Ö–æ—á—É, —á—Ç–æ–±—ã —É–∑–Ω–∞–ª–∏, —á—Ç–æ —è ¬´–Ω–µ —ç–∫—Å–ø–µ—Ä—Ç¬ª", "score": 8}
        ]
    },
    {
        "question": "–ö–æ–≥–¥–∞ —Ç—ã –Ω–∞—á–∏–Ω–∞–µ—à—å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –∏–ª–∏ —Ä–∞–±–æ—Ç—É, —á—Ç–æ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å?",
        "answers": [
            {"text": "–í–æ–ª–Ω–µ–Ω–∏–µ, –Ω–æ —è —É–≤–µ—Ä–µ–Ω–∞ –≤ —Å–≤–æ–∏—Ö —Å–∏–ª–∞—Ö", "score": 2},
            {"text": "–ò–Ω–æ–≥–¥–∞ —Å–æ–º–Ω–µ–≤–∞—é—Å—å, –Ω–æ –≤—Å—ë —Ä–∞–≤–Ω–æ –¥–≤–∏–≥–∞—é—Å—å –≤–ø–µ—Ä—ë–¥", "score": 4},
            {"text": "–û—Ç–∫–ª–∞–¥—ã–≤–∞—é —Å—Ç–∞—Ä—Ç, –ø–æ—Ç–æ–º—É —á—Ç–æ –±–æ—é—Å—å, —á—Ç–æ –Ω–µ —Å–ø—Ä–∞–≤–ª—é—Å—å", "score": 6},
            {"text": "–ü—Ä–æ–∫—Ä–∞—Å—Ç–∏–Ω–∏—Ä—É—é –∏ –æ—Ç–∫–ª–∞–¥—ã–≤–∞—é, –ø–æ—Ç–æ–º—É —á—Ç–æ –±–æ—é—Å—å –ø—Ä–æ–≤–∞–ª–∞", "score": 8}
        ]
    },
    {
        "question": "–ö–∞–∫ —Ç—ã –æ—Ç–Ω–æ—Å–∏—à—å—Å—è –∫ –æ—à–∏–±–∫–∞–º?",
        "answers": [
            {"text": "–í–æ—Å–ø—Ä–∏–Ω–∏–º–∞—é –∏—Ö –∫–∞–∫ –æ–ø—ã—Ç –∏ —É—Ä–æ–∫–∏", "score": 2},
            {"text": "–ò–Ω–æ–≥–¥–∞ –ø–µ—Ä–µ–∂–∏–≤–∞—é, –Ω–æ –∑–Ω–∞—é, —á—Ç–æ —ç—Ç–æ —á–∞—Å—Ç—å –ø—É—Ç–∏", "score": 4},
            {"text": "–ò—Å–ø—ã—Ç—ã–≤–∞—é —Å–∏–ª—å–Ω–æ–µ —Ä–∞–∑–æ—á–∞—Ä–æ–≤–∞–Ω–∏–µ, –¥–∞–∂–µ –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ –Ω–µ–±–æ–ª—å—à–∞—è", "score": 6},
            {"text": "–û—â—É—â–∞—é, —á—Ç–æ –æ—à–∏–±–∫–∏ –¥–æ–∫–∞–∑—ã–≤–∞—é—Ç, —á—Ç–æ —è –≤–æ–æ–±—â–µ –Ω–µ–∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–∞", "score": 8}
        ]
    },
    {
        "question": "–ö–∞–∫ —Ç—ã —Ä–µ–∞–≥–∏—Ä—É–µ—à—å –Ω–∞ —É—Å–ø–µ—Ö–∏ –∫–æ–ª–ª–µ–≥/–∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤?",
        "answers": [
            {"text": "–†–∞–¥—É—é—Å—å –∑–∞ –Ω–∏—Ö, —ç—Ç–æ –º–æ—Ç–∏–≤–∏—Ä—É–µ—Ç –º–µ–Ω—è —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è", "score": 2},
            {"text": "–î—É–º–∞—é, —á—Ç–æ –º–Ω–µ –Ω—É–∂–Ω–æ –µ—â—ë –±–æ–ª—å—à–µ —Å—Ç–∞—Ä–∞—Ç—å—Å—è", "score": 4},
            {"text": "–°—Ä–∞–≤–Ω–∏–≤–∞—é —Å–µ–±—è –∏ —á—É–≤—Å—Ç–≤—É—é, —á—Ç–æ –æ—Ç—Å—Ç–∞—é", "score": 6},
            {"text": "–û—â—É—â–∞—é, —á—Ç–æ —è –≤–æ–æ–±—â–µ –Ω–µ –≤ –∏—Ö –ª–∏–≥–µ –∏ –Ω–µ –∏–º–µ—é –ø—Ä–∞–≤–∞ —Å–µ–±—è —Å –Ω–∏–º–∏ —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å", "score": 8}
        ]
    },
    {
        "question": "–ö–∞–∫ —Ç—ã –ø—Ä–∏–Ω–∏–º–∞–µ—à—å —Ä–µ—à–µ–Ω–∏—è?",
        "answers": [
            {"text": "–î–µ–ª–∞—é –≤—ã–≤–æ–¥—ã –∏ –¥–µ–π—Å—Ç–≤—É—é", "score": 2},
            {"text": "–ò–Ω–æ–≥–¥–∞ —Å–æ–º–Ω–µ–≤–∞—é—Å—å, –Ω–æ –Ω–µ –æ—Ç–∫–ª–∞–¥—ã–≤–∞—é –Ω–∞–¥–æ–ª–≥–æ", "score": 4},
            {"text": "–î–æ–ª–≥–æ –¥—É–º–∞—é –∏ –æ—Ç–∫–ª–∞–¥—ã–≤–∞—é —Ä–µ—à–µ–Ω–∏–µ", "score": 6},
            {"text": "–û—Ç–∫–ª–∞–¥—ã–≤–∞—é –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ –±–æ—é—Å—å –æ—à–∏–±–∏—Ç—å—Å—è", "score": 8}
        ]
    },
    {
        "question": "–ö–∞–∫ —Ç—ã –æ—Ç–Ω–æ—Å–∏—à—å—Å—è –∫ —Å–≤–æ–µ–º—É —É—Ä–æ–≤–Ω—é –∑–Ω–∞–Ω–∏–π?",
        "answers": [
            {"text": "–Ø –∑–Ω–∞—é –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, —á—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Å–≤–æ–µ–π —Å—Ñ–µ—Ä–µ", "score": 2},
            {"text": "–ò–Ω–æ–≥–¥–∞ –º–Ω–µ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ –º–Ω–µ –Ω—É–∂–Ω–æ –µ—â—ë –Ω–µ–º–Ω–æ–≥–æ –ø–æ—É—á–∏—Ç—å—Å—è", "score": 4},
            {"text": "–î—É–º–∞—é, —á—Ç–æ –º–æ–π —É—Ä–æ–≤–µ–Ω—å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—ã—Å–æ–∫", "score": 6},
            {"text": "–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ —è –≤–æ–æ–±—â–µ –Ω–∏—á–µ–≥–æ –Ω–µ –∑–Ω–∞—é, –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç –¥—Ä—É–≥–∏—Ö", "score": 8}
        ]
    },
    {
        "question": "–ß—Ç–æ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å, –∫–æ–≥–¥–∞ —Ç–µ–±–µ –¥–∞—é—Ç —Å–ª–æ–∂–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ?",
        "answers": [
            {"text": "–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å, —á—Ç–æ —Å–ø—Ä–∞–≤–ª—é—Å—å", "score": 2},
            {"text": "–°–æ–º–Ω–µ–≤–∞—é—Å—å, —Å–ø—Ä–∞–≤–ª—é—Å—å –ª–∏", "score": 4},
            {"text": "–î—É–º–∞—é, —á—Ç–æ –º–µ–Ω—è –ø–µ—Ä–µ–æ—Ü–µ–Ω–∏–ª–∏ –∏ —è –Ω–µ –≤—ã—Ç—è–Ω—É", "score": 6},
            {"text": "–•–æ—á—É –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è, –ø–æ—Ç–æ–º—É —á—Ç–æ –±–æ—é—Å—å –ø—Ä–æ–≤–∞–ª–∞", "score": 8}
        ]
    },
    {
        "question": "–ï—Å–ª–∏ –±—ã —Ç—ã –º–æ–≥–ª–∞ –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç —Å–∏–Ω–¥—Ä–æ–º–∞ —Å–∞–º–æ–∑–≤–∞–Ω—Ü–∞, —á—Ç–æ –±—ã –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –≤ —Ç–≤–æ–µ–π –∂–∏–∑–Ω–∏?",
        "answers": [
            {"text": "–Ø –±—ã –ø—Ä–æ–¥–æ–ª–∂–∏–ª–∞ —Ä–∞–±–æ—Ç–∞—Ç—å, –∫–∞–∫ –∏ —Å–µ–π—á–∞—Å, –Ω–æ —Å –±–æ–ª—å—à–∏–º —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º", "score": 2},
            {"text": "–Ø –±—ã —Å–º–æ–≥–ª–∞ —É–≤–µ—Ä–µ–Ω–Ω–æ –±—Ä–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤, –Ω–æ–≤—ã–µ –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã", "score": 4},
            {"text": "–Ø –±—ã –Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–Ω–æ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å, –∞ –Ω–µ —Å–æ–º–Ω–µ–≤–∞—Ç—å—Å—è", "score": 6},
            {"text": "–ú–æ—è –∂–∏–∑–Ω—å –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –±—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é, –ø–æ—Ç–æ–º—É —á—Ç–æ —è —Å–º–æ–≥–ª–∞ –±—ã –¥–µ–ª–∞—Ç—å —Ç–æ, —á–µ–≥–æ –¥–∞–≤–Ω–æ –±–æ—é—Å—å",
             "score": 8}
        ]
    },
]

# States
WELCOME, QUESTION, RESULT, STAGE_1, STAGE_2, FINAL_STAGE, PHONE_REQUEST, COMPLETE = range(8)

# Where we store per-user info during the survey
user_data = {}

welcome_text = (
    "üëã –ü—Ä–∏–≤–µ—Ç, —Ç—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –æ—Ç–∫—Ä—ã–ª —Ç–µ—Å—Ç –Ω–∞ —Å–∏–Ω–¥—Ä–æ–º —Å–∞–º–æ–∑–≤–∞–Ω—Ü–∞, –∏ —ç—Ç–æ —É–∂–µ –ø–µ—Ä–≤—ã–π —à–∞–≥ –∫ –ø–æ–Ω–∏–º–∞–Ω–∏—é, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç "
    "–≤ —Ç–≤–æ–µ–π –≥–æ–ª–æ–≤–µ!\n\n*–≠—Ç–æ—Ç —Ç–µ—Å—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –ø–æ–Ω—è—Ç—å:*\n\n–ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è —Å–∏–Ω–¥—Ä–æ–º —Å–∞–º–æ–∑–≤–∞–Ω—Ü–∞ –∏ –Ω–∞—Å–∫–æ–ª—å–∫–æ –æ–Ω "
    "–≤—ã—Ä–∞–∂–µ–Ω\n\n–ß—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–µ–±—è —Å—Ç–æ–ø–æ—Ä–∏—Ç ‚Äî —Å—Ç—Ä–∞—Ö —Ä–∞–∑–æ–±–ª–∞—á–µ–Ω–∏—è, –ø–µ—Ä—Ñ–µ–∫—Ü–∏–æ–Ω–∏–∑–º, –ø—Ä–æ–∫—Ä–∞—Å—Ç–∏–Ω–∞—Ü–∏—è –∏–ª–∏ —Å–∏–Ω–¥—Ä–æ–º –≤–µ—á–Ω–æ–≥–æ "
    "—É—á–µ–Ω–∏–∫–∞\n\n–ö–∞–∫–∏–µ —à–∞–≥–∏ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å "
    "–ø—Ä—è–º–æ —Å–µ–π—á–∞—Å, —á—Ç–æ–±—ã –∏–∑–±–∞–≤–∏—Ç—Å—è –æ—Ç —Å–∞–º–æ–∑–≤–∞–Ω—Ü–∞ –≤–Ω—É—Ç—Ä–∏ —Å–µ–±—è\n\n–ß—Ç–æ —Ç—ã –ø–æ–ª—É—á–∏—à—å –≤ –∫–æ–Ω—Ü–µ —Ç–µ—Å—Ç–∞:\n\n"
    "üî∏ –†–∞–∑–±–æ—Ä —Ç–≤–æ–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, –∫–∞–∫ —Å —ç—Ç–∏–º —Ä–∞–±–æ—Ç–∞—Ç—å\nüî∏ –£–∑–Ω–∞–µ—à—å –µ—Å—Ç—å –ª–∏ —É —Ç–µ–±—è —Å–∏–Ω–¥—Ä–æ–º —Å–∞–º–æ–∑–≤–∞–Ω—Ü–∞ –∏ –≤ "
    "–∫–∞–∫–æ–π —Å—Ç–µ–ø–µ–Ω–∏ –æ–Ω –≤—ã—Ä–∞–∂–µ–Ω"
    "\nüî∏ –ü–æ–ª—É—á–∏—à—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —á—Ç–æ –¥–µ–ª–∞—Ç—å —Å —Ç–≤–æ–∏–º —Å–ª—É—á–∞–µ–º\n\n–¢–µ—Å—Ç –∑–∞–π–º–µ—Ç –≤—Å–µ–≥–æ 1 "
    "–º–∏–Ω—É—Ç—É ‚Äì –∂–º–∏ ¬´–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç¬ª –∏ —É–∑–Ω–∞–≤–∞–π, —á—Ç–æ –º–µ—à–∞–µ—Ç —Ç–µ–±–µ –¥–≤–∏–≥–∞—Ç—å—Å—è –≤–ø–µ—Ä—ë–¥."
)

stage_2_message = (
    "*–¢—ã —É–∂–µ –∑–Ω–∞–µ—à—å, —á—Ç–æ —á—Ç–æ-—Ç–æ –≤–Ω—É—Ç—Ä–∏ –º–µ—à–∞–µ—Ç —Ç–µ–±–µ –¥–≤–∏–≥–∞—Ç—å—Å—è —Å–≤–æ–±–æ–¥–Ω–æ.*\n"
    "–¢—ã —Ä–∞–±–æ—Ç–∞–µ—à—å, —É–º–µ–µ—à—å, —Å—Ç–∞—Ä–∞–µ—à—å—Å—è. –ù–æ –≤—Å—ë —Ä–∞–≤–Ω–æ –∂–∏–≤—ë—à—å —Å —ç—Ç–∏–º —Ñ–æ–Ω–æ–≤—ã–º –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ–º ‚Äî –∫–∞–∫ –±—É–¥—Ç–æ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç "
    "–∫—Ç–æ-—Ç–æ –ø–æ–π–º—ë—Ç, —á—Ç–æ —Ç—ã ‚Äú–Ω–µ —Ç–æ—Ç‚Äù. –ß—Ç–æ —Ç—ã ‚Äî —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å. –ò —Ç–æ–≥–¥–∞ –≤—Å—ë —Ä—É—Ö–Ω–µ—Ç.\n\n"
    "–Ø –∑–Ω–∞—é —ç—Ç–æ —á—É–≤—Å—Ç–≤–æ.\n"
    "–Ø —Å–∞–º–∞ —á–µ—Ä–µ–∑ –Ω–µ–≥–æ –ø—Ä–æ—Ö–æ–¥–∏–ª–∞. –ò —Å–µ–π—á–∞—Å —Ä–∞–±–æ—Ç–∞—é —Å –ª—é–¥—å–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤–Ω–µ—à–Ω–µ –≤—Å—ë –¥–µ–ª–∞—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ, "
    "–Ω–æ –≤–Ω—É—Ç—Ä–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –æ–±–µ—Å—Ü–µ–Ω–∏–≤–∞—é—Ç —Å–µ–±—è.\n"
    "‚†Ä\n"
    "üìå –Ø –Ω–µ –±—É–¥—É –≥–æ–≤–æ—Ä–∏—Ç—å —Ç–µ–±–µ ‚Äú–ø—Ä–æ—Å—Ç–æ –ø–æ–≤–µ—Ä—å –≤ —Å–µ–±—è‚Äù ‚Äî —ç—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç.\n"
    "‚†Ä\n"
    "–Ø —Ä–∞–±–æ—Ç–∞—é –≤ CBC ‚Äî —ç—Ç–æ –∫–æ–≥–Ω–∏—Ç–∏–≤–Ω–æ-–ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–π –ø–æ–¥—Ö–æ–¥, –æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –∏–∑—É—á–µ–Ω–Ω—ã—Ö –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö –≤ –º–∏—Ä–µ.\n"
    "‚†Ä\n"
    "–ë–µ–∑ —ç–∑–æ—Ç–µ—Ä–∏–∫–∏. –ë–µ–∑ –º–∞–≥–∏–∏. –¢–æ–ª—å–∫–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –º—ã—Å–ª–∏, —Ä–µ–∞–∫—Ü–∏–∏, –¥–µ–π—Å—Ç–≤–∏—è ‚Äî –∏ —Ç–æ, –∫–∞–∫ –º—ã —Å –Ω–∏–º–∏ –æ–±—Ä–∞—â–∞–µ–º—Å—è.\n\n"
    "–ö–∞–∫ —É—Å—Ç—Ä–æ–µ–Ω–∞ —Ä–∞–±–æ—Ç–∞:\n"
    " ‚Äî –ú—ã –Ω–µ –±—É–¥–µ–º ‚Äú—Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å –ø–æ –¥—É—à–∞–º‚Äù, —á—Ç–æ–±—ã —Å—Ç–∞–ª–æ –ø–æ–ª–µ–≥—á–µ.\n"
    " ‚Äî –ú—ã –±—É–¥–µ–º *–º–µ–Ω—è—Ç—å —Ç–æ, –∫–∞–∫ —Ç—ã –¥—É–º–∞–µ—à—å, –¥–µ–π—Å—Ç–≤—É–µ—à—å –∏ –æ—Ç–Ω–æ—Å–∏—à—å—Å—è –∫ —Å–µ–±–µ.*\n\n"
    " ‚Äî –¢—ã –ø–æ–ª—É—á–∏—à—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —Ä–µ–∞–ª—å–Ω–æ —á—Ç–æ-—Ç–æ –¥–≤–∏–≥–∞—é—Ç.\n"
    " ‚Äî –Ø –±—É–¥—É —Ä—è–¥–æ–º –≤ —á–∞—Ç–µ –º–µ–∂–¥—É —Å–µ—Å—Å–∏—è–º–∏ ‚Äî —Ç—ã –Ω–µ –æ—Å—Ç–∞–Ω–µ—à—å—Å—è –≤–∞—Ä–∏—Ç—å—Å—è –≤ —Å–µ–±–µ.\n"
    " ‚Äî –ò –¥–∞, —Ç—ã –Ω–∞—É—á–∏—à—å—Å—è *—Å–∞–º–æ–∫–æ—É—á–∏–Ω–≥—É* ‚Äî —á—Ç–æ–±—ã –Ω–µ –∑–∞–≤–∏—Å–µ—Ç—å –æ—Ç –º–µ–Ω—è –∏ –¥–∞–ª—å—à–µ –æ–ø–∏—Ä–∞—Ç—å—Å—è –Ω–∞ —Å–µ–±—è."
)

final_message = (
    "‚ú® *–•–≤–∞—Ç–∏—Ç –∑–∞–º–∏—Ä–∞—Ç—å. –í—Ä–µ–º—è —Ä–∞—Å—Ç–∏ —É–≤–µ—Ä–µ–Ω–Ω–æ.*\n"
    "*–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å —Å–∏–Ω–¥—Ä–æ–º–æ–º —Å–∞–º–æ–∑–≤–∞–Ω—Ü–∞, —Å—Ç—Ä–∞—Ö–∞–º–∏ –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º–∏ –±–ª–æ–∫–∞–º–∏*\n\n"
    "–¢—ã –º–Ω–æ–≥–æ –∑–Ω–∞–µ—à—å, —Å—Ç–∞—Ä–∞–µ—à—å—Å—è, —É—á–∏—à—å—Å—è. –ù–æ...\n"
    " ‚úî –±–æ–∏—à—å—Å—è –∑–∞—è–≤–∏—Ç—å –æ —Å–µ–±–µ –≥—Ä–æ–º–∫–æ\n"
    " ‚úî –Ω–µ –±–µ—Ä—ë—à—å –¥–æ—Å—Ç–æ–π–Ω—É—é —Ü–µ–Ω—É\n"
    " ‚úî –æ—Ç–∫–ª–∞–¥—ã–≤–∞–µ—à—å –≤–∞–∂–Ω—ã–µ —à–∞–≥–∏\n"
    " ‚úî –Ω–µ —á—É–≤—Å—Ç–≤—É–µ—à—å, —á—Ç–æ —Ç—ã ¬´–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ö–æ—Ä–æ—à–∞¬ª\n"
    " ‚úî —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—à—å —Å–µ–±—è —Å –¥—Ä—É–≥–∏–º–∏ –∏ –∑–∞–º–∏—Ä–∞–µ—à—å\n\n"
    "–Ø –Ω–µ –±—É–¥—É –≥–æ–≤–æ—Ä–∏—Ç—å —Ç–µ–±–µ ¬´–ø–æ–≤–µ—Ä—å –≤ —Å–µ–±—è¬ª.\n"
    "–ú—ã –≤–º–µ—Å—Ç–µ –ø–µ—Ä–µ—Å—Ç—Ä–æ–∏–º –º—ã—à–ª–µ–Ω–∏–µ, —É–∫—Ä–µ–ø–∏–º –æ–ø–æ—Ä—É –∏ —Å–¥–µ–ª–∞–µ–º —Ç–∞–∫, —á—Ç–æ–±—ã —Ç—ã –Ω–∞—á–∞–ª–∞ *–¥–≤–∏–≥–∞—Ç—å—Å—è —Å –ª–µ–≥–∫–æ—Å—Ç—å—é, —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é –∏ —É–≤–∞–∂–µ–Ω–∏–µ–º –∫ —Å–µ–±–µ.*\n\n"
    "üéØ *–í—ã–±–∏—Ä–∞–π —Ñ–æ—Ä–º–∞—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±–µ –ø–æ–¥–æ–π–¥–µ—Ç:*\n\n"
)

price_option_1 = (
    "–î–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –Ω–∞–≤–µ—Å—Ç–∏ –ø–æ—Ä—è–¥–æ–∫ –≤ –≥–æ–ª–æ–≤–µ –∏ –ø–æ–Ω—è—Ç—å, —á—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ.\n\n"
    "*–¢—ã –ø–æ–ª—É—á–∞–µ—à—å:*\n"
    "‚úî 1 –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—É—é —Å–µ—Å—Å–∏—é (60 –º–∏–Ω—É—Ç) ‚Äî *—Ü–µ–Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ: 50$*\n"
    "‚úî –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É ‚Äî –≤ —á—ë–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ —Ç–µ–±—è —Å—Ç–æ–ø–æ—Ä–∏—Ç —Å–∏–Ω–¥—Ä–æ–º —Å–∞–º–æ–∑–≤–∞–Ω—Ü–∞ ‚Äî *—Ü–µ–Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ: 50$*\n"
    "‚úî –ü–æ–π–º–µ–º —á–µ—Ç–∫–∏–π —Ñ–æ–∫—É—Å: –∫—É–¥–∞ –¥–≤–∏–≥–∞—Ç—å—Å—è, —á—Ç–æ–±—ã –Ω–µ —Å–ª–∏–≤–∞—Ç—å—Å—è ‚Äî *—Ü–µ–Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ: 50$*\n\n"
    "*üéÅ + –ü–æ–¥–∞—Ä–∫–∏:*\n"
    "‚úî –ì–∞–π–¥ ¬´–ö–∞–∫ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å–æ —Å—Ç—Ä–∞—Ö–∞–º–∏, –µ—Å–ª–∏ —É —Ç–µ–±—è —Å–∏–Ω–¥—Ä–æ–º —Å–∞–º–æ–∑–≤–∞–Ω—Ü–∞?¬ª ‚Äî *—Ü–µ–Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ: 30$*\n\n"
    "üéÅ *–ü—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å —ç—Ç–æ—Ç –ø–∞–∫–µ—Ç –∑–∞ 30$*\n"
    "üîë –£–∂–µ –ø–æ—Å–ª–µ –æ–¥–Ω–æ–π —Å–µ—Å—Å–∏–∏ —Ç—ã –Ω–∞—á–Ω—ë—à—å —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å: *—è –º–æ–≥—É. –ò–º–µ—é –ø—Ä–∞–≤–æ. –•–≤–∞—Ç–∏—Ç —Ç–æ—Ä–º–æ–∑–∏—Ç—å.*"
)

price_option_2 = (
    "–î–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –≥–ª—É–±–æ–∫–æ –ø—Ä–æ—Ä–∞–±–æ—Ç–∞—Ç—å —Å—Ç—Ä–∞—Ö–∏, –≤—ã–π—Ç–∏ –Ω–∞ –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å –∏ –ø–µ—Ä–µ—Å—Ç–∞—Ç—å –æ–±–µ—Å—Ü–µ–Ω–∏–≤–∞—Ç—å —Å–µ–±—è.\n\n"
    "*–¢—ã –ø–æ–ª—É—á–∞–µ—à—å:*\n"
    "‚úî 4 –∫–æ—É—á-—Å–µ—Å—Å–∏–∏ (60 –º–∏–Ω) ‚Äî *—Ü–µ–Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ: 100$*\n"
    "‚úî –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –∏ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –æ—Ç –∫–æ—É—á–∞\n\n"
    "*üéÅ + –ü–æ–¥–∞—Ä–∫–∏:*\n"
    "‚úî –ì–∞–π–¥ ¬´–ó–Ω–∞—é, –Ω–æ –Ω–µ –¥–µ–ª–∞—é¬ª: –∫–∞–∫ –ø—Ä–µ–æ–¥–æ–ª–µ—Ç—å –ø—Ä–æ–∫—Ä–∞—Å—Ç–∏–Ω–∞—Ü–∏—é?¬ª ‚Äî *—Ü–µ–Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ: 30$*\n\n"
    "üéÅ –ü—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å —ç—Ç–æ—Ç –ø–∞–∫–µ—Ç –∑–∞ *100$*"
)

complete_message = (
    "–¢–µ—Å—Ç –¥–ª—è —Ç–µ–±—è —Å–æ—Å—Ç–∞–≤–∏–ª–∞ *–ê–Ω–Ω–∞ –ó–∞–±–∞–∑–Ω–æ–≤–∞* ‚Äî –∫–æ—É—á –∏ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ –Ω–∞ –ø—É—Ç–∏ –∫ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏.\n"
    "–Ø —Ä–∞–±–æ—Ç–∞—é —Å —Å–∏–Ω–¥—Ä–æ–º–æ–º —Å–∞–º–æ–∑–≤–∞–Ω—Ü–∞, –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º –∫—Ä–∏—Ç–∏–∫–æ–º –∏ –Ω–µ—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é, –ø–æ–º–æ–≥–∞—è –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è –∫ —Å–µ–±–µ –Ω–∞—Å—Ç–æ—è—â–µ–π.\n\n"
    "*–ú–æ–π –∏–Ω—Å—Ç–∞–≥—Ä–∞–º*: https://www.instagram.com/anna.procoaching\n\n"
    "*–ú–æ–π —Ç–µ–ª–µ–≥—Ä–∞–º*: https://t.me/annnacoaching"
)

contact_message = (
    "–°–ø–∞—Å–∏–±–æ! –Ø —Å–≤—è–∂—É—Å—å —Å —Ç–æ–±–æ–π –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤ üíå\n\n"
    "*–ï—Å–ª–∏ —Ç—ã –Ω–µ –æ—Å—Ç–∞–≤–∏–ª–∞ —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç, —Ç–æ –ø—Ä–æ–π–¥–∏ —Ç–µ—Å—Ç –∑–∞–Ω–æ–≤–æ –∏ –æ—Å—Ç–∞–≤—å –µ–≥–æ.*"
)
# </editor-fold>


# <editor-fold desc="üß† UTILS">

def escape_markdown_v2(text: str) -> str:
    # Escape only necessary characters
    escape_chars = r'[\]()>#+-=|{}.!'  # removed * and `
    return re.sub(rf'([{re.escape(escape_chars)}])', r'\\\1', text)

# Result messages based on score
def get_result_message(score):
    if score <= 30:
        return ("üåü –°–∏–Ω–¥—Ä–æ–º —Å–∞–º–æ–∑–≤–∞–Ω—Ü–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –º–∏–Ω–∏–º–∞–ª–µ–Ω\n\n‚ú® –¢—ã —É–º–µ–µ—à—å –ø—Ä–∏–∑–Ω–∞–≤–∞—Ç—å —Å–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏ "
                "—É–≤–µ—Ä–µ–Ω–Ω–æ –∏–¥—ë—à—å –≤–ø–µ—Ä—ë–¥. –°–ø–æ–∫–æ–π–Ω–æ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–µ—à—å –ø–æ—Ö–≤–∞–ª—É, –Ω–µ –æ–±–µ—Å—Ü–µ–Ω–∏–≤–∞–µ—à—å —É—Å–ø–µ—Ö–∏ –∏ –Ω–µ –ø—Ä–∏–ø–∏—Å—ã–≤–∞–µ—à—å –∏—Ö "
                "—Å–ª—É—á–∞–π–Ω–æ—Å—Ç–∏ ‚Äî —Ç—ã —Å—Ç–æ–∏—à—å –Ω–∞ –ø—Ä–æ—á–Ω–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –æ–ø–æ—Ä–µ."
                "\n\nüìå –ù–æ –±—É–¥—å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–∞:\n–í –º–æ–º–µ–Ω—Ç—ã –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è, –ø—É–±–ª–∏—á–Ω–æ—Å—Ç–∏ –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω –º–æ–∂–µ—Ç –≤–∫–ª—é—á–∞—Ç—å—Å—è "
                "–≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫—Ä–∏—Ç–∏–∫."
                "\n–¢—ã –º–æ–∂–µ—à—å –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –Ω–∞ 100%, –ø—Ä–æ—Å—Ç–æ –ø–æ—Ç–æ–º—É —á—Ç–æ —á—Ç–æ-—Ç–æ –≤–Ω—É—Ç—Ä–∏ —à–µ–ø—á–µ—Ç:"
                "\n\n¬´–ê –≤–¥—Ä—É–≥ —ç—Ç–æ –±—ã–ª–æ —Å–ª—É—á–∞–π–Ω–æ? –ê –≤–¥—Ä—É–≥ —è –ø–µ—Ä–µ–æ—Ü–µ–Ω–∏–≤–∞—é —Å–µ–±—è?..¬ª\n\nüéØ –ß—Ç–æ –¥–∞–ª—å—à–µ?"
                "\n–¢—ã –≥–æ—Ç–æ–≤–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å ‚Äî –Ω–æ –±–µ–∑ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è, –≤ —Å–≤–æ—ë–º —Ç–µ–º–ø–µ, —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º."
                "\n–ù–∞ –∫–æ—É—á-—Å–µ—Å—Å–∏—è—Ö –º—ã:\n‚Äî —É–±–µ—Ä—ë–º –æ—Å—Ç–∞—Ç–æ—á–Ω—ã–µ –±–ª–æ–∫–∏,\n‚Äî —É–∫—Ä–µ–ø–∏–º —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å,\n‚Äî –ø–æ—Å—Ç—Ä–æ–∏–º —Å—Ç—Ä–∞—Ç–µ–≥–∏—é "
                "—Ä–æ—Å—Ç–∞ –±–µ–∑ –≤—ã–≥–æ—Ä–∞–Ω–∏—è."
                "\n\nüëâ –•–æ—á–µ—à—å –≤—ã–π—Ç–∏ –Ω–∞ –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å –±–µ–∑ —Å—Ç—Ä–∞—Ö–∞ –∏ –æ—Ç–∫–∞—Ç–æ–≤?\n–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É ¬´–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å¬ª ‚Äî –∏ —è —Ä–∞—Å—Å–∫–∞–∂—É, "
                "–∫–∞–∫ —ç—Ç–æ –º–æ–∂–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –∏–º–µ–Ω–Ω–æ –¥–ª—è —Ç–µ–±—è.")
    elif score <= 50:
        return ("–£–º–µ—Ä–µ–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å —Å–∏–Ω–¥—Ä–æ–º–∞ —Å–∞–º–æ–∑–≤–∞–Ω—Ü–∞\n\n‚ú® –¢—ã –¥–µ–π—Å—Ç–≤—É–µ—à—å. –¢—ã —É–º–µ–µ—à—å."
                "\n–ù–æ –≤–Ω—É—Ç—Ä–∏ –±—É–¥—Ç–æ –∂–∏–≤—ë—Ç –≥–æ–ª–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –º–µ—à–∞–µ—Ç –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –æ–ø–æ—Ä—É:\n¬´–ê –º–æ–∂–µ—Ç, —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ "
                "–ø–æ–≤–µ–∑–ª–æ?..¬ª\n¬´–î—Ä—É–≥–∏–µ —Ç–æ—á–Ω–æ –∑–Ω–∞—é—Ç –±–æ–ª—å—à–µ‚Ä¶¬ª\n¬´–ï—Å–ª–∏ —è –æ—à–∏–±—É—Å—å, –æ–±–æ –º–Ω–µ –ø–æ–¥—É–º–∞—é—Ç –Ω–µ —Ç–æ‚Ä¶¬ª"
                "\n\nüìå –ö–∞–∫ —ç—Ç–æ –≤–ª–∏—è–µ—Ç:\n‚Äî –û—Ç–∫–ª–∞–¥—ã–≤–∞–µ—à—å –∑–∞–ø—É—Å–∫ —Å–≤–æ–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞\n‚Äî –ù–µ –≥–æ–≤–æ—Ä–∏—à—å –æ —Å–≤–æ–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö\n‚Äî "
                "–ë–æ–∏—à—å—Å—è –ø—Ä–æ—Å–∏—Ç—å"
                "–±–æ–ª—å—à–µ\n‚Äî –ë–µ—Ä—ë—à—å –º–µ–Ω—å—à–µ –∫–ª–∏–µ–Ω—Ç–æ–≤/–ø—Ä–æ–µ–∫—Ç–æ–≤/–∑–∞–¥–∞—á, —á–µ–º –º–æ–≥–ª–∞ –±—ã"
                "\n\n–¢—ã –±—É–¥—Ç–æ –¥–µ—Ä–∂–∏—à—å —Å–µ–±—è ¬´–≤ —Ç–µ–Ω–∏¬ª ‚Äî —Ö–æ—Ç—è –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –æ–≥—Ä–æ–º–Ω—ã–π."
                "\n\nüéØ –ß—Ç–æ –¥–∞–ª—å—à–µ?\n–°–æ–º–Ω–µ–Ω–∏—è –Ω–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ñ–æ–Ω–æ–º —Ç–≤–æ–µ–π –∫–∞—Ä—å–µ—Ä—ã.\n–° —ç—Ç–∏–º –º–æ–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å ‚Äî –∏ "
                "–æ—Å–≤–æ–±–æ–¥–∏—Ç—å —Å–µ–±—è –æ—Ç —Å—Ç—Ä–∞—Ö–∞ –±—ã—Ç—å —Å–æ–±–æ–π."
                "\n\nüëâ –•–æ—á–µ—à—å –Ω–∞–∫–æ–Ω–µ—Ü –ø–æ–≤–µ—Ä–∏—Ç—å –≤ —Å–µ–±—è –∏ –ø–µ—Ä–µ—Å—Ç–∞—Ç—å —Ç–æ—Ä–º–æ–∑–∏—Ç—å —Ä–æ—Å—Ç?\n–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É ¬´–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å¬ª ‚Äî —Ä–∞—Å—Å–∫–∞–∂—É, "
                "—Å —á–µ–≥–æ –Ω–∞—á–∞—Ç—å –∏ –∫–∞–∫ –º–æ–∂–Ω–æ –≤—ã–π—Ç–∏ –∏–∑ —ç—Ç–æ–≥–æ –∫—Ä—É–≥–∞.")
    elif score <= 65:
        return ("–í—ã—Ä–∞–∂–µ–Ω–Ω—ã–π —Å–∏–Ω–¥—Ä–æ–º —Å–∞–º–æ–∑–≤–∞–Ω—Ü–∞\n\n–¢—ã –º–Ω–æ–≥–æ —Ä–∞–±–æ—Ç–∞–µ—à—å, —É—á–∏—à—å—Å—è, —Å—Ç–∞—Ä–∞–µ—à—å—Å—è ‚Äî –Ω–æ –≤–Ω—É—Ç—Ä–∏ –±—É–¥—Ç–æ "
                "–ø—É—Å—Ç–æ.\n\n¬´–Ø –Ω–µ –Ω–∞—Å—Ç–æ—è—â–∏–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª —Å–≤–æ–µ–≥–æ –¥–µ–ª–∞¬ª\n¬´–ö–æ–≥–¥–∞-–Ω–∏–±—É–¥—å —ç—Ç–æ —Ä–∞—Å–∫—Ä–æ–µ—Ç—Å—è –∏ –≤—Å–µ –ø–æ–π–º—É—Ç —á—Ç–æ —è "
                "–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ö–æ—Ä–æ—à–∞...¬ª\n¬´–Ø –ø—Ä–æ—Å—Ç–æ —Ö–æ—Ä–æ—à–æ "
                "—Å–∫—Ä—ã–≤–∞—é —Å–≤–æ–µ –∏—Å—Ç–∏–Ω–Ω–æ–µ —è‚Ä¶¬ª\n\nüìå –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç:\n‚Äî –¢—ã –±–æ–∏—à—å—Å—è –ø—Ä–æ—Å–∏—Ç—å –±–æ–ª—å—à–µ\n‚Äî –ù–µ –≥–æ–≤–æ—Ä–∏—à—å –æ —Å–µ–±–µ "
                "–ø—É–±–ª–∏—á–Ω–æ\n‚Äî"
                "–û—Ç–∫–∞–∑—ã–≤–∞–µ—à—å—Å—è –æ—Ç –ø—Ä–æ–µ–∫—Ç–æ–≤ ¬´–Ω–∞ –≤—ã—Ä–æ—Å—Ç¬ª\n‚Äî –ù–µ –º–æ–∂–µ—à—å –æ—Ç–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª—å ‚Äî –∏ —É—Å—Ç–∞—ë—à—å\n\n–≠—Ç–æ –Ω–µ –ø—Ä–æ "
                "–æ–±—ä–µ–∫—Ç–∏–≤–Ω—É—é —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å. –≠—Ç–æ –ø—Ä–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∫—Ä–∏—Ç–∏–∫–∞, –∫–æ—Ç–æ—Ä—ã–π —É–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ—à–µ–Ω–∏—è–º–∏.\n\nüéØ –ß—Ç–æ "
                "–¥–∞–ª—å—à–µ?\n–í–∞–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å —Å–µ–±–µ –ø—Ä–∞–≤–æ –±—ã—Ç—å, –ø—Ä–æ—è–≤–ª—è—Ç—å—Å—è, –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, —Ä–∞—Å—Ç–∏ ‚Äî —Å —É–≤–∞–∂–µ–Ω–∏–µ–º –∫ —Å–µ–±–µ.\n\nüëâ "
                "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É ¬´–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å¬ª, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å –ø—É—Ç—å –∫ –∂–∏–∑–Ω–∏, –≥–¥–µ —Ç—ã –±–æ–ª—å—à–µ –Ω–µ –¥–æ–∫–∞–∑—ã–≤–∞–µ—à—å ‚Äî —Ç—ã –ø—Ä–æ—Å—Ç–æ "
                "–∂–∏–≤—ë—à—å, –¥—ã—à–∏—à—å –∏ –¥–µ–ª–∞–µ—à—å —Å–≤–æ—ë –¥–µ–ª–æ.")
    else:
        return ("üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Å–∏–Ω–¥—Ä–æ–º–∞ —Å–∞–º–æ–∑–≤–∞–Ω—Ü–∞\n\n–¢—ã –∂–∏–≤—ë—à—å –≤ —Ä–µ–∂–∏–º–µ –≤—ã–∂–∏–≤–∞–Ω–∏—è.\n–¢—ã —Ä–∞–±–æ—Ç–∞–µ—à—å, "
                "–Ω–æ –Ω–µ —á—É–≤—Å—Ç–≤—É–µ—à—å, —á—Ç–æ –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—à—å.\n–¢—ã –±–æ–∏—à—å—Å—è –ø–æ–∫–∞–∑–∞—Ç—å—Å—è ¬´—Å–∞–º–æ—É–≤–µ—Ä–µ–Ω–Ω–æ–π¬ª.\n–¢—ã –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—à—å. –ù–µ "
                "–ø—Ä–æ—Å–∏—à—å. –ù–µ –∑–∞—è–≤–ª—è–µ—à—å.\n\nüìå –ö–∞–∫ —ç—Ç–æ –≤—ã–≥–ª—è–¥–∏—Ç:\n‚Äî –¢—ã —É—á–∏—à—å—Å—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ, –Ω–æ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—à—å\n‚Äî –¢—ã "
                "–¥–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ—à—å, –Ω–æ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—à—å\n‚Äî –¢—ã —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—à—å ‚Äî –∏ –≤—Å–µ–≥–¥–∞ –≤ –º–∏–Ω—É—Å\n‚Äî –¢—ã –∂–∏–≤—ë—à—å –≤ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–∏, "
                "—á—Ç–æ ¬´–≤–æ—Ç-–≤–æ—Ç –≤—Å—ë —Ä—É—Ö–Ω–µ—Ç¬ª\n\nüìå –í–∞–∂–Ω–æ –ø–æ–Ω—è—Ç—å:\n–¢—ã –Ω–µ –Ω–µ–∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–∞.\n–¢—ã –ø—Ä–æ—Å—Ç–æ –¥–æ–ª–≥–æ –∂–∏–≤—ë—à—å —Å "
                "–≥–æ–ª–æ—Å–æ–º, –∫–æ—Ç–æ—Ä—ã–π –≥–æ–≤–æ—Ä–∏—Ç:\n¬´–¢—ã –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–∞‚Ä¶¬ª\n¬´–¢—ã –Ω–µ –∏–º–µ–µ—à—å –ø—Ä–∞–≤–∞‚Ä¶¬ª\n\nüéØ –ß—Ç–æ –¥–∞–ª—å—à–µ?\n–° —ç—Ç–∏–º "
                "—Ä–µ–∞–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å. –ë–µ–∑ —Å—Ç—ã–¥–∞. –ë–µ–∑ –¥–∞–≤–ª–µ–Ω–∏—è.\n–í –ø–æ–¥–¥–µ—Ä–∂–∫–µ, —Å –º–µ—Ç–æ–¥–∏–∫–æ–π, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–≥–∞–µ—Ç.\n\nüëâ –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É "
                "¬´–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å¬ª, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –≤—ã–¥–æ—Ö–Ω—É—Ç—å –∏, –Ω–∞–∫–æ–Ω–µ—Ü, —Ä–∞–∑—Ä–µ—à–∏—Ç—å —Å–µ–±–µ –∂–∏—Ç—å —Å–≤–æ—é –∂–∏–∑–Ω—å ‚Äî –±–µ–∑ —Å—Ç—Ä–∞—Ö–∞ –±—ã—Ç—å "
                "—Å–æ–±–æ–π.")


def get_stage_1_message(score):
    if score <= 30:
        return ("üß≠ –¢—ã —É–≤–µ—Ä–µ–Ω–Ω–æ –∏–¥—ë—à—å –≤–ø–µ—Ä—ë–¥ ‚Äî —ç—Ç–æ —á—É–≤—Å—Ç–≤—É–µ—Ç—Å—è. –ù–æ –¥–∞–∂–µ –ø—Ä–∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –æ–ø–æ—Ä–µ –º–æ–≥—É—Ç –±—ã—Ç—å "
                "–∑–æ–Ω—ã, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —Ç—ã –µ—â—ë –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –Ω–∞ –ø–æ–ª–Ω—É—é –º–æ—â–Ω–æ—Å—Ç—å. –û—Å–æ–±–µ–Ω–Ω–æ –≤ –º–æ–º–µ–Ω—Ç—ã —Å—Ç—Ä–µ—Å—Å–∞, "
                "–º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å.\n\n–ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –≥–ª—É–±–∂–µ –ø–æ–Ω—è—Ç—å, "
                "—á–µ–≥–æ —Ç—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—á–µ—à—å –æ—Ç —Å–≤–æ–µ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –∫–∞–∫ –≤—ã—Å—Ç—Ä–æ–∏—Ç—å —Ü–µ–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ç–µ–±–µ, "
                "–∞ –Ω–µ ¬´–Ω–∞–¥–æ¬ª, –∏ –∫–∞–∫ –¥–≤–∏–≥–∞—Ç—å—Å—è –∫ –Ω–∏–º —Å–ø–æ–∫–æ–π–Ω–æ, –±–µ–∑ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è ‚Äî —è –ø—Ä–∏–≥–ª–∞—à–∞—é —Ç–µ–±—è –≤ –ª–∏—á–Ω—É—é "
                "—Ä–∞–±–æ—Ç—É.\n\n–ù–∞ –∫–æ—É—á-—Å–µ—Å—Å–∏—è—Ö –º—ã:\n‚Äî –†–∞–∑–±–µ—Ä—ë–º, –∫–∞–∫–∏–µ —Ç–≤–æ–∏ –Ω–∞—Å—Ç–æ—è—â–∏–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –º–æ–≥—É—Ç —Å—Ç–∞—Ç—å —Ç–æ—á–∫–æ–π "
                "–æ–ø–æ—Ä—ã\n‚Äî –û–ø—Ä–µ–¥–µ–ª–∏–º —Ü–µ–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –≤–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å, –∞ –Ω–µ –≤—ã–∂–∏–º–∞—Ç—å\n‚Äî –£–±–µ—Ä—ë–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è, "
                "–∫–æ—Ç–æ—Ä—ã–µ –º–µ—à–∞—é—Ç —Ä–∞—Å–∫—Ä—ã—Ç—å—Å—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –¥–∞–∂–µ –≤ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏\n\n–ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –∏–¥—Ç–∏ –≥–ª—É–±–∂–µ –∏ "
                "—Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ ‚Äî –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É *¬´–ö–æ—É—á–∏–Ω–≥¬ª*, –∏ —è —Ä–∞—Å—Å–∫–∞–∂—É, –∫–∞–∫ —ç—Ç–æ –º–æ–∂–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –¥–ª—è —Ç–µ–±—è.")
    elif score <= 50:
        return ("üîç –¢—ã —É–º–µ–µ—à—å –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å. –ù–æ –∫–æ–≥–¥–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ, –∞–º–±–∏—Ü–∏–æ–∑–Ω–æ–µ –∏–ª–∏ –ø—É–±–ª–∏—á–Ω–æ–µ ‚Äî –ø–æ—è–≤–ª—è–µ—Ç—Å—è –∏ "
                "–≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫—Ä–∏—Ç–∏–∫. –°–æ–º–Ω–µ–Ω–∏—è –≤ —Å—Ç–∏–ª–µ ¬´–∞ –≤–¥—Ä—É–≥ —è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ö–æ—Ä–æ—à–∞?¬ª –Ω–∞—á–∏–Ω–∞—é—Ç –º–µ—à–∞—Ç—å —Ä–∞—Å—Ç–∏.\n\n"
                "–ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –ø–µ—Ä–µ—Å—Ç–∞—Ç—å –∑–∞–º–∏—Ä–∞—Ç—å –ø–µ—Ä–µ–¥ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏, –Ω–∞—É—á–∏—Ç—å—Å—è —Å–ø–æ–∫–æ–π–Ω–æ –≥–æ–≤–æ—Ä–∏—Ç—å –æ —Å–µ–±–µ –∏ —Å–≤–æ–∏—Ö "
                "—É—Å–ø–µ—Ö–∞—Ö,"
                "–±—Ä–∞—Ç—å —É–≤–µ—Ä–µ–Ω–Ω–æ –ø—Ä–æ–µ–∫—Ç—ã –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –±–µ–∑ —Å—Ç—ã–¥–∞ ‚Äî —è –ø—Ä–∏–≥–ª–∞—à–∞—é —Ç–µ–±—è –Ω–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—É—é —Ä–∞–±–æ—Ç—É.\n\n"
                "–í –ø—Ä–æ—Ü–µ—Å—Å–µ –∫–æ—É—á–∏–Ω–≥–∞ –º—ã:\n"
                " ‚Äî –ù–∞–π–¥—ë–º –∫–ª—é—á–µ–≤—ã–µ —É–±–µ–∂–¥–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –≤–∫–ª—é—á–∞—é—Ç —Å–∏–Ω–¥—Ä–æ–º —Å–∞–º–æ–∑–≤–∞–Ω—Ü–∞ –≤ —Å—Ç—Ä–µ—Å—Å–æ–≤—ã—Ö —Ç–æ—á–∫–∞—Ö\n"
                " ‚Äî –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é —Å–∏—Å—Ç–µ–º—É –æ—Ü–µ–Ω–∫–∏ —Å–µ–±—è\n"
                " ‚Äî –ü–æ—Å—Ç—Ä–æ–∏–º –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é, —á—Ç–æ–±—ã —Ç—ã –º–æ–≥–ª–∞ —Ä–∞—Å—Ç–∏ –±–µ–∑ –Ω–∞–¥—Ä—ã–≤–∞ –∏ —Å—Ç—Ä–∞—Ö–∞\n\n"
                "–ï—Å–ª–∏ —á—É–≤—Å—Ç–≤—É–µ—à—å, —á—Ç–æ —Ö–æ—á–µ—à—å –ø–µ—Ä–µ—Å—Ç–∞—Ç—å —Å–æ–º–Ω–µ–≤–∞—Ç—å—Å—è –≤ —Ç–æ–º, —á—Ç–æ —É–∂–µ –≤–Ω—É—Ç—Ä–∏ —Ç–µ–±—è –µ—Å—Ç—å ‚Äî –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É "
                "*¬´–ö–æ—É—á–∏–Ω–≥¬ª*, "
                "–∏ —è —Ä–∞—Å—Å–∫–∞–∂—É –æ —Ñ–æ—Ä–º–∞—Ç–µ —Ä–∞–±–æ—Ç—ã.")
    elif score <= 65:
        return ("üí° –¢—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ –∏–Ω–æ–≥–¥–∞ —Å–æ–º–Ω–µ–≤–∞–µ—à—å—Å—è.\n\n–¢—ã —á–∞—Å—Ç–æ –∂–∏–≤—ë—à—å *–Ω–∞ —Ç–æ–Ω–∫–æ–π –≥—Ä–∞–Ω–∏* - –º–µ–∂–¥—É ¬´—è —Å–ø—Ä–∞–≤–ª—è—é—Å—å¬ª –∏ "
                "¬´—è –Ω–∞ –ø—Ä–µ–¥–µ–ª–µ¬ª‚öñÔ∏è\n–ö–∞–∫ –±—É–¥—Ç–æ –≤—Å—ë –¥–µ—Ä–∂–∏—Ç—Å—è"
                "–Ω–∞ –∫–æ–Ω—Ç—Ä–æ–ª–µ, —É—Å–∏–ª–∏—è—Ö –∏ —Å—Ç—Ä–∞—Ö–µ ¬´–Ω–µ –æ–±–ª–∞–∂–∞—Ç—å—Å—è¬ªüòì\n–ò –¥–∞–∂–µ –∫–æ–≥–¥–∞ —Å–Ω–∞—Ä—É–∂–∏ –≤—Å–µ –≤—ã–≥–ª—è–¥–∏—Ç –æ–∫ ‚Äî –≤–Ω—É—Ç—Ä–∏ "
                "–Ω–∞–∫–∞–ø–ª–∏–≤–∞–µ—Ç—Å—è —Ç—Ä–µ–≤–æ–≥–∞,"
                "—É—Å—Ç–∞–ª–æ—Å—Ç—å –∏ –º—ã—Å–ª—å ¬´–ê –≤–¥—Ä—É–≥ –≤—Å–µ —ç—Ç–æ –Ω–µ –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É?..¬ªüí≠\n\n"
                "–ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å:\n"
                " ‚Äî üåø –ü–µ—Ä–µ—Å—Ç–∞—Ç—å –æ–±–µ—Å—Ü–µ–Ω–∏–≤–∞—Ç—å —Å–µ–±—è\n"
                " ‚Äî üî• –ë—Ä–∞—Ç—å —Ç–µ —Å–∞–º—ã–µ –ø—Ä–æ–µ–∫—Ç—ã, –æ—Ç –∫–æ—Ç–æ—Ä—ã—Ö –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É –∑–∞–≥–æ—Ä–∞–µ—à—å—Å—è\n"
                " ‚Äî üßò‚Äç‚ôÄÔ∏è –†–∞–±–æ—Ç–∞—Ç—å –≤ —Å–≤–æ—ë–º —Ç–µ–º–ø–µ, –±–µ–∑ —á—É–≤—Å—Ç–≤–∞ –≤–∏–Ω—ã –∏ —Å–∞–º–æ–∫–æ–ø–∞–Ω–∏—è\n"
                " ‚Äî üåü –ù–∞—á–∞—Ç—å –≤–∏–¥–µ—Ç—å –∏ –ø—Ä–∏–∑–Ω–∞–≤–∞—Ç—å —Å–≤–æ—é —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ—Å—Ç—å\n"
                " ‚Äî üìà –†–∞—Å—Ç–∏ ‚Äî —É—Å—Ç–æ–π—á–∏–≤–æ, –±–µ–∑ –≤—ã–≥–æ—Ä–∞–Ω–∏—è –∏ –≥–æ–Ω–∫–∏\n\n"
                "–Ø –ø—Ä–∏–≥–ª–∞—à–∞—é —Ç–µ–±—è –≤ –ª–∏—á–Ω—ã–π –∫–æ—É—á–∏–Ω–≥.\n\n"
                "–ù–∞ —Å–µ—Å—Å–∏—è—Ö –º—ã:\n"
                " ‚úî –†–∞–∑–±–µ—Ä–µ–º, –∫–∞–∫ –∏–º–µ–Ω–Ω–æ —Å–∏–Ω–¥—Ä–æ–º —Å–∞–º–æ–∑–≤–∞–Ω—Ü–∞ –≤–ª–∏—è–µ—Ç –Ω–∞ —Ç–≤–æ–∏ —Ä–µ—à–µ–Ω–∏—è\n"
                " ‚úî –°–Ω–∏–º–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –∑–∞–ø—Ä–µ—Ç—ã –Ω–∞ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å, –ø—Ä–æ—è–≤–ª–µ–Ω–Ω–æ—Å—Ç—å –∏ –ø—Ä–∞–≤–æ –±—ã—Ç—å ¬´–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ¬ª\n"
                " ‚úî –ü–æ–¥—Ä—É–∂–∏–º —Ç–≤–æ—é –ª–æ–≥–∏–∫—É –∏ —á—É–≤—Å—Ç–≤–∞ ‚Äî —á—Ç–æ–±—ã –æ–Ω–∏ –ø–µ—Ä–µ—Å—Ç–∞–ª–∏ —Ç—è–Ω—É—Ç—å –≤ —Ä–∞–∑–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã ü§ù\n\n"
                "–¢—ã –Ω–µ –æ–±—è–∑–∞–Ω–∞ –≤—Å—ë —Ç—è–Ω—É—Ç—å —Å–∞–º–∞ ü§ç\n"
                "–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–µ—Ä–µ—Å—Ç–∞—Ç—å –±–æ—Ä–æ—Ç—å—Å—è –∏ –Ω–∞—á–∞—Ç—å –∂–∏—Ç—å —Å –æ—â—É—â–µ–Ω–∏–µ–º: ¬´—è –º–æ–≥—É, —è —É–º–µ—é, —è –∏–º–µ—é –ø—Ä–∞–≤–æ¬ª ‚Äî –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É "
                "*¬´–ö–æ—É—á–∏–Ω–≥¬ª*, –∏ –º—ã –æ–±—Å—É–¥–∏–º, –∫–∞–∫ –Ω–∞—á–∞—Ç—å.")
    else:
        return ("üÜò –ï—Å–ª–∏ –≤–Ω—É—Ç—Ä–∏ –≤—Å—ë –≤—Ä–µ–º—è –æ—â—É—â–µ–Ω–∏–µ, —á—Ç–æ —Ç—ã –∫–∞–∫ –±—É–¥—Ç–æ ¬´–Ω–µ —Å–æ–≤—Å–µ–º –Ω–∞—Å—Ç–æ—è—â–∞—è¬ª, —á—Ç–æ –ª—é–±–æ–µ –Ω–æ–≤–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ "
                "‚Äî —ç—Ç–æ —Ä–∏—Å–∫ –±—ã—Ç—å —Ä–∞–∑–æ–±–ª–∞—á–µ–Ω–Ω–æ–π, –∞ —Ç–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –±—É–¥—Ç–æ —Å–ª—É—á–∞–π–Ω—ã –∏–ª–∏ –ø—Ä–µ—É–≤–µ–ª–∏—á–µ–Ω—ã‚Ä¶\n"
                "–ó–Ω–∞–µ—à—å, —ç—Ç–æ –Ω–µ –ø—Ä–æ —Ç–æ, —á—Ç–æ —Ç—ã –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–∞."
                "–≠—Ç–æ –ø—Ä–æ —Ç–æ, —á—Ç–æ —Ç—ã —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ –∂–∏–≤–µ—à—å —Ä—è–¥–æ–º —Å –≥–æ–ª–æ—Å–æ–º, –∫–æ—Ç–æ—Ä—ã–π —Ç–∞–∫ –≥–æ–≤–æ—Ä–∏—Ç. üí≠\n\n"
                "–Ø –∑–Ω–∞—é, –∫–∞–∫ —Ç—è–∂–µ–ª–æ –≤—Å—ë –≤—Ä–µ–º—è –¥–µ—Ä–∂–∞—Ç—å—Å—è, —á—Ç–æ–±—ã –Ω–∏–∫—Ç–æ –Ω–µ –∑–∞–º–µ—Ç–∏–ª: *—è –Ω–∞ –ø—Ä–µ–¥–µ–ª–µ*.\n"
                "–ñ–∏—Ç—å —Å –æ—â—É—â–µ–Ω–∏–µ–º, —á—Ç–æ —Ç—ã *–ø–æ—á—Ç–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—à—å, –ø–æ—á—Ç–∏ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è, –ø–æ—á—Ç–∏ –∏–º–µ–µ—à—å –ø—Ä–∞–≤–æ –±—ã—Ç—å –∑–¥–µ—Å—å‚Ä¶*\n"
                "–≠—Ç–æ –≤—ã–º–∞—Ç—ã–≤–∞–µ—Ç. –û—á–µ–Ω—å. üòî\n"
                "–ù–æ —Å —ç—Ç–∏–º –º–æ–∂–Ω–æ –ø–æ-–¥—Ä—É–≥–æ–º—É.\n–ë–µ–∑ –¥–∞–≤–ª–µ–Ω–∏—è. –ë–µ–∑ ¬´–¥–∞–≤–∞–π, —Å–æ–±–µ—Ä–∏—Å—å¬ª.\n–° —É–≤–∞–∂–µ–Ω–∏–µ–º –∫ —Ç–æ–º—É –ø—É—Ç–∏, "
                "–∫–æ—Ç–æ—Ä—ã–π —Ç—ã —É–∂–µ –ø—Ä–æ—à–ª–∞."
                "–ò —Å –º—è–≥–∫–æ–π, —á–µ—Å—Ç–Ω–æ–π –ø–µ—Ä–µ—Å—Ç—Ä–æ–π–∫–æ–π –∏–∑–Ω—É—Ç—Ä–∏. üå±\n\n"
                "–ù–∞ –∫–æ—É—á-—Å–µ—Å—Å–∏—è—Ö –º—ã:\n"
                "‚úî –†–∞–∑–±–µ—Ä–µ–º, –æ—Ç–∫—É–¥–∞ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ —Ä–∞—Å—Ç–µ—Ç —ç—Ç–æ—Ç —Å—Ç—Ä–∞—Ö –±—ã—Ç—å ¬´–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–º(–æ–π)¬ª\n"
                "‚úî –ù–∞—á–Ω—ë–º –º–µ–Ω—è—Ç—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –≥–æ–ª–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –æ–±–µ—Å—Ü–µ–Ω–∏–≤–∞–µ—Ç\n"
                "‚úî –ü–æ–º–æ–∂–µ–º —Ç–µ–±–µ —Å–æ–±—Ä–∞—Ç—å –æ–ø–æ—Ä—É ‚Äî –Ω–µ –ø—Ä–∏–¥—É–º–∞–Ω–Ω—ã–π –∏–¥–µ–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–∑, –∞ –Ω–∞—Å—Ç–æ—è—â—É—é —Ç–µ–±—è, –∂–∏–≤—É—é, "
                "—É–≤–µ—Ä–µ–Ω–Ω—É—é, —É—Å—Ç–æ–π—á–∏–≤—É—é üí™\n\n"
                "–¢—ã –Ω–µ –æ–±—è–∑–∞–Ω–∞ —Å–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —Å —ç—Ç–∏–º –æ–¥–Ω–∞. ü§ç\n"
                "–ï—Å–ª–∏ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å, —á—Ç–æ —Ö–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å –∂–∏—Ç—å –∏–Ω–∞—á–µ ‚Äî –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É *¬´–ö–æ—É—á–∏–Ω–≥¬ª*, "
                "–∏ —è —Ä–∞—Å—Å–∫–∞–∂—É, –∫–∞–∫ —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–º–µ–Ω–Ω–æ –¥–ª—è —Ç–µ–±—è ‚ú®")


def get_final_stage_buttons():
    buttons = [
        ["–†–∞–∑–æ–≤–∞—è –∫–æ—É—á-—Å–µ—Å—Å–∏—è"],
        ["–°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ 1 –º–µ—Å—è—Ü"],
        ["üìû –Ø –∏–¥—É!"]
    ]
    return ReplyKeyboardMarkup(buttons, resize_keyboard=True, one_time_keyboard=False)

# </editor-fold>


# <editor-fold desc="üîê ADMIN COMMANDS">

async def admin_panel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if not is_admin(user_id):
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
        return

    keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton("üìÑ Export Signups", callback_data="export_csv")],
        [InlineKeyboardButton("üìù Export Action Log", callback_data="export_log")],
        [InlineKeyboardButton("üïµÔ∏è Check Drops", callback_data="check_drops")],
        [InlineKeyboardButton("üìä View Stats", callback_data="view_stats")]
    ])

    await update.message.reply_text("üìã –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:", reply_markup=keyboard)


async def admin_button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    user_id = query.from_user.id
    await query.answer()  # Acknowledge press

    if not is_admin(user_id):
        await query.edit_message_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
        return

    if query.data == "export_csv":
        try:
            with open("final_signups.csv", "rb") as f:
                await context.bot.send_document(chat_id=user_id, document=f, filename="final_signups.csv")
        except FileNotFoundError:
            await query.edit_message_text("‚ö†Ô∏è –§–∞–π–ª –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–Ω.")

    elif query.data == "export_log":
        try:
            with open("user_action_log.csv", "rb") as f:
                await context.bot.send_document(chat_id=user_id, document=f, filename="user_action_log.csv")
        except FileNotFoundError:
            await query.edit_message_text("‚ö†Ô∏è –õ–æ–≥ –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–∫–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω.")

    elif query.data == "check_drops":
        await check_for_dropped_users()
        await query.edit_message_text("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∞–Ω—ã.")

    elif query.data == "view_stats":
        stats = await generate_stats()
        await query.edit_message_text(stats)


async def generate_stats():
    try:
        with open("final_signups.csv", "r", encoding="utf-8") as f:
            rows = list(csv.reader(f))[1:]  # skip header

        total = len(rows)
        completed = sum(1 for row in rows if row[7] == "completed")
        dropped = sum(1 for row in rows if row[7] == "dropped")
        pending = total - completed - dropped

        return (f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n\n"
                f"üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total}\n"
                f"‚úÖ –ó–∞–≤–µ—Ä—à–∏–ª–∏: {completed}\n"
                f"‚è≥ –í –ø—Ä–æ—Ü–µ—Å—Å–µ: {pending}\n"
                f"‚ùå –û—Ç–≤–∞–ª–∏–ª–∏—Å—å: {dropped}")
    except Exception as e:
        return f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}"

async def check_drops_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if not is_admin(user_id):
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
        print(f"Unauthorized /check_drops attempt by user {user_id}")
        return

    await check_for_dropped_users()
    await update.message.reply_text("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç–≤–∞–ª–∏–≤—à–∏—Ö—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")


async def export_csv_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id

    if not is_admin(user_id):
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
        return

    try:
        file_path = "final_signups.csv"
        with open(file_path, "rb") as f:
            await context.bot.send_document(chat_id=user_id, document=InputFile(f), filename=file_path)

    except FileNotFoundError:
        await update.message.reply_text("‚ö†Ô∏è –§–∞–π–ª –µ—â—ë –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω.")
    except Exception as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞: {e}")

# </editor-fold>


# <editor-fold desc="üìä CSV & TRACKING">

CSV_COLUMNS = ["Timestamp", "Username", "User ID", "Phone", "Score", "Source", "Last Step", "Status"]

#Logic for updating last step
STEP_PRIORITY = {
    "User started": 0,
    "Phone shared or skipped": 1,
    "Survey completed": 2,
    "Viewed: get_result_message": 3,
    "Viewed: get_stage_1_message": 4,
    "Viewed: stage_2_message": 5,
    "Viewed: final_message": 6,
    "Viewed: price_option_1": 7,
    "Viewed: price_option_2": 7,  # same level for both price options
    "User proceeded to complete": 8,
    "Flow completed": 9,
}

def log_user_action(user_id, username, action, extra=""):
    filename = "user_action_log.csv"
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M")

    is_new_file = not os.path.exists(filename)

    with open(filename, "a", newline="", encoding="utf-8") as f:
        writer = csv.writer(f)
        if is_new_file:
            writer.writerow(["Timestamp", "User ID", "Username", "Action", "Extra Info"])
        writer.writerow([
            datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
            user_id,
            username,
            action,
            extra
        ])


async def update_signup_record(
    user_id,
    username,
    phone="–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö",
    score="–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö",
    source="–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö",
    last_step="started",
    status="pending",
    filename="final_signups.csv"  # ‚úÖ allow overriding in tests
):

    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M")
    is_new_file = not os.path.exists(filename) or os.stat(filename).st_size == 0

    # Read existing rows
    if not is_new_file:
        with open(filename, "r", encoding="utf-8") as f:
            rows = list(csv.reader(f))
    else:
        rows = []

    # Find user
    found = False
    for row in rows:
        if len(row) >= 3 and row[2] == str(user_id):
            # ‚úÖ Preserve the first non-empty phone value
            if phone != "–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö" and row[3].strip() in ["–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö", "–Ω–µ —É–∫–∞–∑–∞–Ω", ""]:
                row[3] = phone
            if score != "–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö":
                row[4] = score
            # Only write source if it's not already set ‚Äî to preserve original attribution
            if source != "–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö" and (row[5] == "–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö" or not row[5].strip()):
                row[5] = source

            # Compare last steps by priority
            old_step = row[6]
            old_priority = STEP_PRIORITY.get(old_step, 0)
            new_priority = STEP_PRIORITY.get(last_step, 0)

            if new_priority >= old_priority:
                row[6] = last_step

            # Always allow status update
            if status:
                current_status = row[7].strip().lower()
                if current_status not in ["completed", "dropped"]:
                    row[7] = status

            found = True
            break

    if not found:
        # New user row
        rows.append([timestamp, username, user_id, phone, score, source, last_step, status])

    # Write updated file
    with open(filename, "w", newline="", encoding="utf-8") as f:
        writer = csv.writer(f)
        if is_new_file:
            writer.writerow(CSV_COLUMNS)
        writer.writerows(rows)

async def check_for_dropped_users():
    filename = "final_signups.csv"
    updated = False

    if not os.path.exists(filename):
        return

    now = datetime.now()

    with open(filename, "r", encoding="utf-8") as f:
        rows = list(csv.reader(f))

    header = rows[0]
    new_rows = [header]

    for row in rows[1:]:
        if len(row) < 8:
            continue
        timestamp_str, username, user_id, phone, score, source, last_step, status = row

        # Only check pending users
        if status == "pending":
            try:
                timestamp = datetime.strptime(timestamp_str, "%Y-%m-%d %H:%M")
                if (now - timestamp).total_seconds() > 24 * 3600:
                    # More than 24h passed
                    row[7] = "dropped"
                    updated = True
            except Exception as e:
                print(f"Error parsing timestamp for user {user_id}: {e}")

        new_rows.append(row)

    if updated:
        with open(filename, "w", newline="", encoding="utf-8") as f:
            writer = csv.writer(f)
            writer.writerows(new_rows)

        print("Dropped users updated.")

# </editor-fold>


# <editor-fold desc="ü§ñ SURVEY LOGIC">

# Ask a survey question
async def ask_question(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_chat.id
    index = user_data[user_id]["index"]


    if index >= len(survey):
        score = user_data[user_id]["score"]
        user_data[user_id]["score_result"] = get_result_message(score)

        await update_signup_record(user_id, update.effective_user.full_name, score=str(score),
                                   last_step="Survey completed")

        # Show result
        next_button = [[KeyboardButton("–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å")]]
        markup = ReplyKeyboardMarkup(next_button, one_time_keyboard=True, resize_keyboard=True)

        await update.message.reply_text(f"‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω!\n–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞: {score} –±–∞–ª–ª–æ–≤\n\n{get_result_message(score)}",
                                        reply_markup=markup)
        return RESULT

    q = survey[index]
    keyboard = [[a["text"]] for a in q["answers"]]
    markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)

    await update.message.reply_text(q["question"], reply_markup=markup)
    return QUESTION


# –û—Ç–≤–µ—Ç—ã
async def handle_answer(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    user_id = update.effective_chat.id
    username = user.full_name or user.username or f"user_{user_id}"

    text = update.message.text
    index = user_data[user_id]["index"]
    for ans in survey[index]["answers"]:
        if ans["text"] == text:
            user_data[user_id]["score"] += ans["score"]
            break
    user_data[user_id]["index"] += 1

    log_user_action(user_id, username, f"Answered Q{index + 1}")

    return await ask_question(update, context)


# "–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å"
async def stage_1(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_chat.id
    username = update.effective_user.full_name or update.effective_user.username or f"user_{user_id}"
    score = user_data[update.effective_chat.id]["score"]
    btn = [[KeyboardButton("–ö–æ—É—á–∏–Ω–≥")]]
    markup = ReplyKeyboardMarkup(btn, one_time_keyboard=True, resize_keyboard=True)

    await update_signup_record(user_id, username, last_step="Viewed: get_stage_1_message")

    escaped_msg = escape_markdown_v2(get_stage_1_message(score))
    await update.message.reply_text(escaped_msg, reply_markup=markup, parse_mode="MarkdownV2")
    return STAGE_1


# "–ö–æ—É—á–∏–Ω–≥"
async def stage_2(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_chat.id
    username = update.effective_user.full_name or update.effective_user.username or f"user_{user_id}"
    btn = [[KeyboardButton("–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ")]]
    markup = ReplyKeyboardMarkup(btn, one_time_keyboard=True, resize_keyboard=True)

    await update_signup_record(user_id, username, last_step="Viewed: stage_2_message")

    escaped_stage_2_message = escape_markdown_v2(stage_2_message)
    await update.message.reply_text(escaped_stage_2_message, reply_markup=markup, parse_mode="MarkdownV2")
    return STAGE_2


# "–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ"
async def final_stage(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_chat.id
    username = update.effective_user.full_name or update.effective_user.username or f"user_{user_id}"
    # Show buttons for options or skip to the next step
    markup = get_final_stage_buttons()

    # Show the final message
    await update_signup_record(user_id, username, last_step="Viewed: final_message")

    escaped_final_message = escape_markdown_v2(final_message)
    await update.message.reply_text(escaped_final_message, reply_markup=markup, parse_mode="MarkdownV2")
    return FINAL_STAGE


async def handle_final_stage_buttons(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_chat.id
    username = update.effective_user.full_name or update.effective_user.username or f"user_{user_id}"
    text = update.message.text

    if text == "–†–∞–∑–æ–≤–∞—è –∫–æ—É—á-—Å–µ—Å—Å–∏—è":
        esc_price_option_1 = escape_markdown_v2(price_option_1)
        await update_signup_record(user_id, username, last_step="Viewed: price_option_1")
        await update.message.reply_text(esc_price_option_1, reply_markup=get_final_stage_buttons(), parse_mode="MarkdownV2")
        return FINAL_STAGE

    elif text == "–°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ 1 –º–µ—Å—è—Ü":
        esc_price_option_2 = escape_markdown_v2(price_option_2)
        await update_signup_record(user_id, username, last_step="Viewed: price_option_2")
        await update.message.reply_text(esc_price_option_2, reply_markup=get_final_stage_buttons(), parse_mode="MarkdownV2")
        return FINAL_STAGE

    elif text == "üìû –Ø –∏–¥—É!":
        return await complete(update, context)

    else:
        await update.message.reply_text("–í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ üëá", reply_markup=get_final_stage_buttons(), parse_mode="MarkdownV2")
        return FINAL_STAGE


# "–Ø –∏–¥—É"
async def complete(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    user_id = user.id
    username = user.full_name or user.username or f"user_{user_id}"
    score = user_data[user_id]["score"]
    phone_number = user_data[user_id].get("final_phone", "–Ω–µ —É–∫–∞–∑–∞–ª(–∞)")
    source = user_data.get(user_id, {}).get("source", "direct")

    msg = (
        f"üö® –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—à—ë–ª –≤–µ—Å—å –ø—É—Ç—å:\n\n"
        f"üë§ {username}\n"
        f"üÜî {user_id}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone_number}\n"
        f"üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç: {score}\n"
        f"üåê –ò—Å—Ç–æ—á–Ω–∏–∫: {source}"
    )

    # Notify all admins
    for admin_id in ADMIN_IDS:
        try:
            await context.bot.send_message(chat_id=admin_id, text=msg)
        except telegram.error.BadRequest as e:
            print(f"‚ùå Failed to send message to admin {admin_id}: {e}")

        # ‚úÖ Send the full contact if available
        if "telegram_contact" in user_data[user_id]:
            contact = user_data[user_id]["telegram_contact"]
            await context.bot.send_contact(
                chat_id=admin_id,
                phone_number=contact.phone_number,
                first_name=contact.first_name,
                last_name=contact.last_name or None,
                vcard=contact.vcard or None
            )

    log_user_action(user_id, username, "Completed flow", f"Score: {score}")
    await update_signup_record(user_id, username, last_step="Flow completed", status="completed")

    # 1. Remove old buttons + text
    esc_contact_message = escape_markdown_v2(contact_message)
    await update.message.reply_text(esc_contact_message,
    reply_markup=ReplyKeyboardRemove(), parse_mode="MarkdownV2")

    # 2. Show complete_message with links
    esc_complete_message = escape_markdown_v2(complete_message)
    await update.message.reply_text(esc_complete_message, parse_mode="MarkdownV2")

    # 3. Suggest restarting the test (use native way)
    await update.message.reply_text(
        "üîÅ –•–æ—á–µ—à—å –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –∑–∞–Ω–æ–≤–æ? –ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ /start"
    )

    return ConversationHandler.END

# </editor-fold>


# <editor-fold desc="üßµ CONVERSATION HANDLERS">

# Start command ‚Äî send welcome message
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    username = update.effective_user.full_name or update.effective_user.username or f"user_{user_id}"
    source = context.args[0] if context.args else "direct"

    user_data[user_id] = {"score": 0, "index": 0, "source": source}

    # ‚úÖ Attempt to load previously saved phone from CSV
    try:
        with open("final_signups.csv", newline='', encoding="utf-8") as f:
            reader = csv.DictReader(f)
            for row in reader:
                if row.get("User ID") == str(user_id):
                    previous_phone = row.get("Phone", "").strip()
                    if previous_phone and previous_phone.lower() != "–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö":
                        user_data[user_id]["final_phone"] = previous_phone
                    break
    except FileNotFoundError:
        pass  # First-time user, file doesn‚Äôt exist yet

    log_user_action(user_id, username, "Started bot", f"Source: {source}")
    return await show_welcome(update.message, user_id, username, source, context)

async def show_welcome(message, user_id, username, source, context):
    start_button = [[KeyboardButton("üöÄ –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç")]]
    markup = ReplyKeyboardMarkup(start_button, one_time_keyboard=True, resize_keyboard=True)

    await update_signup_record(user_id, username, source=source, last_step="User started the flow")

    escaped_text = escape_markdown_v2(welcome_text)
    await message.reply_text(escaped_text, reply_markup=markup, parse_mode="MarkdownV2")

    return WELCOME


# Handle "Start Survey" button
async def begin_survey(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_chat.id

    user_data[user_id]["score"] = 0
    user_data[user_id]["index"] = 0

    return await phone_request(update, context)

async def phone_request(update: Update, context: ContextTypes.DEFAULT_TYPE):
    buttons = [
        [KeyboardButton("üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)],
        [KeyboardButton("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")]
    ]
    markup = ReplyKeyboardMarkup(buttons, one_time_keyboard=True, resize_keyboard=True)

    await update.message.reply_text(
        "üì≤ –ß—Ç–æ–±—ã —è –º–æ–≥–ª–∞ —Å —Ç–æ–±–æ–π —Å–≤—è–∑–∞—Ç—å—Å—è, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ. –Ø –ø–æ–ª—É—á—É —Ç–≤–æ–π –Ω–æ–º–µ—Ä.\n"
        "–ò–ª–∏ –Ω–∞–∂–º–∏ ¬´–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å¬ª, –µ—Å–ª–∏ –ø–æ–∫–∞ –Ω–µ –≥–æ—Ç–æ–≤(–∞) –¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º.",
        reply_markup=markup
    )
    return PHONE_REQUEST

async def handle_contact_or_skip(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    user_id = user.id
    username = user.full_name or user.username or f"user_{user_id}"
    source = user_data[user_id].get("source", "unknown")

    # If user shared their contact, store it
    if update.message.contact:
        phone_number = update.message.contact.phone_number
        user_data[user_id]["final_phone"] = phone_number
        user_data[user_id]["telegram_contact"] = update.message.contact  # ‚úÖ store full contact
    else:
        if "final_phone" not in user_data[user_id]:
            user_data[user_id]["final_phone"] = "–Ω–µ —É–∫–∞–∑–∞–Ω"
        phone_number = user_data[user_id]["final_phone"]

    log_user_action(user_id, username, "Phone shared or skipped", phone_number)
    await update_signup_record(user_id, username, phone=phone_number, last_step="Phone shared or skipped")

    return await ask_question(update, context)


# Cancel command
async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–¢–µ—Å—Ç –æ—Ç–º–µ–Ω—ë–Ω.")
    return ConversationHandler.END

# </editor-fold>


# <editor-fold desc="üß∞ APP & MAIN()">

# Set up bot
def main():
    app = ApplicationBuilder().token(TOKEN).build()

    # üõë Ensure no webhook blocks polling (removed for now)
    # app.bot.delete_webhook(drop_pending_updates=True)

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            WELCOME: [MessageHandler(filters.Regex(r"^üöÄ –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç$"), begin_survey)],
            PHONE_REQUEST: [
                MessageHandler(filters.CONTACT, handle_contact_or_skip),
                MessageHandler(filters.Regex("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"), handle_contact_or_skip)
            ],
            QUESTION: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_answer)],
            RESULT: [MessageHandler(filters.Regex("–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å"), stage_1)],
            STAGE_1: [MessageHandler(filters.Regex("–ö–æ—É—á–∏–Ω–≥"), stage_2)],
            STAGE_2: [MessageHandler(filters.Regex("–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ"), final_stage)],
            FINAL_STAGE: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_final_stage_buttons)]
        },
        fallbacks=[
            CommandHandler("cancel", cancel)
        ]
    )

    app.add_handler(conv_handler)
    app.add_handler(CommandHandler("check_drops", check_drops_command))
    app.add_handler(CommandHandler("export_csv", export_csv_command))
    app.add_handler(CommandHandler("admin_panel", admin_panel))
    app.add_handler(CallbackQueryHandler(admin_button_handler))

    app.run_polling()


if __name__ == "__main__":
    main()

# </editor-fold>